> #Łukasz Czepielik 051392
> #APU Laboratorium 3
> #Wariant: 6
> 
> #Zadanie1
> install.packages("neuralnet")
Warning in install.packages :
  unable to access index for repository https://mran.revolutionanalytics.com/snapshot/2016-11-01/src/contrib:
  nie można otworzyć adresu URL 'https://mran.revolutionanalytics.com/snapshot/2016-11-01/src/contrib/PACKAGES'
Warning in install.packages :
  unable to access index for repository https://mran.revolutionanalytics.com/snapshot/2016-11-01/src/contrib:
  nie można otworzyć adresu URL 'https://mran.revolutionanalytics.com/snapshot/2016-11-01/src/contrib/PACKAGES'
Warning in install.packages :
  package ‘neuralnet’ is not available (for R version 3.3.2)
Warning in install.packages :
  unable to access index for repository https://mran.revolutionanalytics.com/snapshot/2016-11-01/bin/windows/contrib/3.3:
  nie można otworzyć adresu URL 'https://mran.revolutionanalytics.com/snapshot/2016-11-01/bin/windows/contrib/3.3/PACKAGES'
> library("neuralnet")
> 
> normalize <- function(x) {
+   return ((x - min(x)) / (max(x) - min(x)))
+ }
> 
> argument <-as.data.frame(runif(100, min = 1, max = 3))
> wynik_funkcji <- cos(argument^2)
> 
> argument
    runif(100, min = 1, max = 3)
1                       1.850605
2                       1.196208
3                       2.324783
4                       1.606781
5                       2.404748
6                       1.503145
7                       1.265036
8                       1.422064
9                       2.713610
10                      1.127052
11                      2.901223
12                      1.996722
13                      2.265968
14                      2.248367
15                      1.463477
16                      2.823733
17                      2.251606
18                      2.224311
19                      2.849416
20                      2.520460
21                      1.299896
22                      2.929307
23                      2.234910
24                      1.657226
25                      1.932247
26                      2.258853
27                      1.322752
28                      1.560980
29                      1.959059
30                      1.358792
31                      1.314954
32                      2.687475
33                      1.420833
34                      2.321388
35                      1.682588
36                      2.173315
37                      2.135502
38                      2.764497
39                      2.905597
40                      2.816655
41                      2.232478
42                      2.642881
43                      1.439753
44                      2.919109
45                      1.764180
46                      1.076091
47                      2.449123
48                      1.202353
49                      1.187135
50                      2.248935
51                      2.874806
52                      2.165023
53                      1.750866
54                      2.176976
55                      2.834755
56                      1.900354
57                      2.323392
58                      1.595677
59                      2.429612
60                      1.817198
61                      1.301342
62                      2.394483
63                      2.074978
64                      1.983603
65                      2.848295
66                      2.407816
67                      1.432527
68                      1.635707
69                      1.492315
70                      1.173274
71                      2.650196
72                      1.033099
73                      2.257821
74                      1.315641
75                      2.140686
76                      2.544140
77                      1.397873
78                      2.975490
79                      1.287198
80                      1.587579
81                      2.206120
82                      2.329308
83                      1.527204
84                      1.949814
85                      1.050137
86                      2.177784
87                      2.578225
88                      2.343626
89                      1.921320
90                      1.440504
91                      2.349617
92                      1.419076
93                      1.100023
94                      1.716713
95                      1.801257
96                      2.648851
97                      2.290036
98                      1.063575
99                      2.495013
100                     2.882835
> wynik_funkcji
       runif(100, min = 1, max = 3)
  [1,]                  -0.96018069
  [2,]                   0.13942787
  [3,]                   0.63825261
  [4,]                  -0.84733589
  [5,]                   0.87740396
  [6,]                  -0.63549399
  [7,]                  -0.02951570
  [8,]                  -0.43628831
  [9,]                   0.47089245
 [10,]                   0.29604510
 [11,]                  -0.53382301
 [12,]                  -0.66350129
 [13,]                   0.40978973
 [14,]                   0.33609449
 [15,]                  -0.54044691
 [16,]                  -0.11920465
 [17,]                   0.34978352
 [18,]                   0.23300690
 [19,]                  -0.26209323
 [20,]                   0.99758365
 [21,]                  -0.11865327
 [22,]                  -0.66452418
 [23,]                   0.27869339
 [24,]                  -0.92292197
 [25,]                  -0.82983511
 [26,]                   0.38021420
 [27,]                  -0.17792527
 [28,]                  -0.76165443
 [29,]                  -0.76720890
 [30,]                  -0.27204741
 [31,]                  -0.15764733
 [32,]                   0.59032520
 [33,]                  -0.43313654
 [34,]                   0.62603160
 [35,]                  -0.95218407
 [36,]                   0.01090913
 [37,]                  -0.15143357
 [38,]                   0.20996454
 [39,]                  -0.55512583
 [40,]                  -0.07947955
 [41,]                   0.26824464
 [42,]                   0.76378691
 [43,]                  -0.48125994
 [44,]                  -0.61879925
 [45,]                  -0.99957195
 [46,]                   0.40119820
 [47,]                   0.95966645
 [48,]                   0.12481612
 [49,]                   0.16080647
 [50,]                   0.33849632
 [51,]                  -0.39909146
 [52,]                  -0.02506106
 [53,]                  -0.99710876
 [54,]                   0.02683357
 [55,]                  -0.18085149
 [56,]                  -0.89168029
 [57,]                   0.63326187
 [58,]                  -0.82792070
 [59,]                   0.92860159
 [60,]                  -0.98712868
 [61,]                  -0.12238770
 [62,]                   0.85271549
 [63,]                  -0.39572315
 [64,]                  -0.70164891
 [65,]                  -0.25592396
 [66,]                   0.88439177
 [67,]                  -0.46296368
 [68,]                  -0.89334834
 [69,]                  -0.61011555
 [70,]                   0.19300583
 [71,]                   0.73822942
 [72,]                   0.48249620
 [73,]                   0.37589899
 [74,]                  -0.15943187
 [75,]                  -0.12948626
 [76,]                   0.98210552
 [77,]                  -0.37394026
 [78,]                  -0.84123220
 [79,]                  -0.08597686
 [80,]                  -0.81318939
 [81,]                   0.15396019
 [82,]                   0.65432383
 [83,]                  -0.69004914
 [84,]                  -0.78988128
 [85,]                   0.45111023
 [86,]                   0.03035093
 [87,]                   0.93445886
 [88,]                   0.70341815
 [89,]                  -0.85258805
 [90,]                  -0.48315502
 [91,]                   0.72312031
 [92,]                  -0.42863495
 [93,]                   0.35297163
 [94,]                  -0.98114682
 [95,]                  -0.99470709
 [96,]                   0.74301961
 [97,]                   0.50715182
 [98,]                   0.42558121
 [99,]                   0.99831298
[100,]                  -0.44103866
> 
> zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
> zeskalowane.argument
    runif.100..min...1..max...3.
1                    0.420876354
2                    0.083973031
3                    0.664996836
4                    0.295348239
5                    0.706165256
6                    0.241993368
7                    0.119407949
8                    0.200250523
9                    0.865176554
10                   0.048369813
11                   0.961765410
12                   0.496101614
13                   0.634717397
14                   0.625655925
15                   0.221571110
16                   0.921871312
17                   0.627323174
18                   0.613270750
19                   0.935093528
20                   0.765737035
21                   0.137354893
22                   0.976223622
23                   0.618727601
24                   0.321319012
25                   0.462907593
26                   0.631054208
27                   0.149122025
28                   0.271768648
29                   0.476711238
30                   0.167676386
31                   0.145107170
32                   0.851721277
33                   0.199616740
34                   0.663249125
35                   0.334376078
36                   0.587016753
37                   0.567549691
38                   0.891374590
39                   0.964017272
40                   0.918227108
41                   0.617475742
42                   0.828763329
43                   0.209357209
44                   0.970973256
45                   0.376382171
46                   0.022133424
47                   0.729010702
48                   0.087137078
49                   0.079301979
50                   0.625947991
51                   0.948164793
52                   0.582747842
53                   0.369527516
54                   0.588901665
55                   0.927545355
56                   0.446488344
57                   0.664280704
58                   0.289631847
59                   0.718966077
60                   0.403677442
61                   0.138099429
62                   0.700880743
63                   0.536389952
64                   0.489347269
65                   0.934516393
66                   0.707744795
67                   0.205636958
68                   0.310240433
69                   0.236417610
70                   0.072166072
71                   0.832529234
72                   0.000000000
73                   0.630522911
74                   0.145460893
75                   0.570218541
76                   0.777928364
77                   0.187796545
78                   1.000000000
79                   0.130817707
80                   0.285462654
81                   0.603905535
82                   0.667326672
83                   0.254379928
84                   0.471951680
85                   0.008771474
86                   0.589317665
87                   0.795476457
88                   0.674697996
89                   0.457282341
90                   0.209743868
91                   0.677781986
92                   0.198712417
93                   0.034454449
94                   0.351944773
95                   0.395470113
96                   0.831836595
97                   0.647108247
98                   0.015689954
99                   0.752636419
100                  0.952298518
> 
> dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
> colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
> 
> net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
> 
> plot(net.price)
> 
> #Zadanie2
> setwd("C:/R_Directory/ŁukaszCzepielik_apu_sprawozdanie3/")
> pralki <- read.csv("ŁukaszCzepielik_apu_sprawozdanie3_csv.csv")
> 
> cena <- normalize(pralki$cena)
> cena
 [1] 0.46153846154 0.57692307692 0.53846153846 1.00000000000 0.38461538462 0.15384615385 0.69230769231
 [8] 0.76923076923 0.42307692308 0.42307692308 0.07692307692 1.00000000000 0.61538461538 0.00000000000
[15] 0.26923076923 0.00000000000 0.23076923077 0.50000000000 0.26923076923 0.11538461538
> 
> pralki <- pralki[,-5]
> pralki <- pralki[,-1]
> pralki
                                   nazwa pojemność prędkość_wirowania liczba_opini oceny_klientów
1                Whirlpool FWG71283BV PL       7.0               1200           24            5.0
2      Electrolux EW6S326SPI PerfectCare       6.0               1200           98            5.0
3  Bosch WAN2826EPL Serie 4 VarioPerfect       8.0               1400          223            5.0
4            Samsung AddWash WW80K5210UW       8.0               1200           78            5.0
5                       Beko EWTV6636XAW       6.0               1200           18            4.5
6  Bosch WAE2026EPL Serie 2 VarioPerfect       7.0               1000          238            5.0
7  Bosch WLT24460PL Serie 6 VarioPerfect       6.5               1200          633            5.0
8       Samsung AddWash Slim WW60K42109W       6.0               1200          138            5.0
9  Bosch WAN2406EPL Serie 4 VarioPerfect       7.0               1200          153            5.0
10                   Samsung WF60F4EFW2W       6.0               1200          283            5.0
11                       Beko WRE5511BWW       5.0               1000           17            4.5
12      Electrolux EW7F348SP PerfectCare       8.0               1400           59            5.0
13                   Samsung WW70J5446FW       7.0               1400          296            5.0
14           Indesit IWSC 51052 C ECO PL       5.0               1000          647            5.0
15 Bosch WAB20264PL Serie 2 VarioPerfect       6.0                100          305            5.0
16                    Sharp ES-HFA6103W3       6.0               1000          117            5.0
17                    Amica DAW 6103 LSW       6.0               1000          180            5.0
18              Whirlpool EFWSG71283BVPL       7.0               1200           57            5.0
19 Bosch WAB24264PL Serie 2 VarioPerfect       6.0               1200          268            5.0
20               Indesit BWSA 61253 W EU       6.0               1200          107            5.0
       status_opinii
1    mniej 50 opinii
2      50-100 opinii
3  więcej 100 opinii
4      50-100 opinii
5    mniej 50 opinii
6  więcej 100 opinii
7  więcej 100 opinii
8  więcej 100 opinii
9  więcej 100 opinii
10 więcej 100 opinii
11   mniej 50 opinii
12     50-100 opinii
13 więcej 100 opinii
14 więcej 100 opinii
15 więcej 100 opinii
16 więcej 100 opinii
17 więcej 100 opinii
18     50-100 opinii
19 więcej 100 opinii
20 więcej 100 opinii
> 
> pralki[,2:5] <- as.data.frame(lapply(pralki[,2:5], normalize))
> 
> pralki <- cbind(pralki, cena)
> pralki
                                   nazwa    pojemność prędkość_wirowania   liczba_opini oceny_klientów
1                Whirlpool FWG71283BV PL 0.6666666667       0.8461538462 0.011111111111              1
2      Electrolux EW6S326SPI PerfectCare 0.3333333333       0.8461538462 0.128571428571              1
3  Bosch WAN2826EPL Serie 4 VarioPerfect 1.0000000000       1.0000000000 0.326984126984              1
4            Samsung AddWash WW80K5210UW 1.0000000000       0.8461538462 0.096825396825              1
5                       Beko EWTV6636XAW 0.3333333333       0.8461538462 0.001587301587              0
6  Bosch WAE2026EPL Serie 2 VarioPerfect 0.6666666667       0.6923076923 0.350793650794              1
7  Bosch WLT24460PL Serie 6 VarioPerfect 0.5000000000       0.8461538462 0.977777777778              1
8       Samsung AddWash Slim WW60K42109W 0.3333333333       0.8461538462 0.192063492063              1
9  Bosch WAN2406EPL Serie 4 VarioPerfect 0.6666666667       0.8461538462 0.215873015873              1
10                   Samsung WF60F4EFW2W 0.3333333333       0.8461538462 0.422222222222              1
11                       Beko WRE5511BWW 0.0000000000       0.6923076923 0.000000000000              0
12      Electrolux EW7F348SP PerfectCare 1.0000000000       1.0000000000 0.066666666667              1
13                   Samsung WW70J5446FW 0.6666666667       1.0000000000 0.442857142857              1
14           Indesit IWSC 51052 C ECO PL 0.0000000000       0.6923076923 1.000000000000              1
15 Bosch WAB20264PL Serie 2 VarioPerfect 0.3333333333       0.0000000000 0.457142857143              1
16                    Sharp ES-HFA6103W3 0.3333333333       0.6923076923 0.158730158730              1
17                    Amica DAW 6103 LSW 0.3333333333       0.6923076923 0.258730158730              1
18              Whirlpool EFWSG71283BVPL 0.6666666667       0.8461538462 0.063492063492              1
19 Bosch WAB24264PL Serie 2 VarioPerfect 0.3333333333       0.8461538462 0.398412698413              1
20               Indesit BWSA 61253 W EU 0.3333333333       0.8461538462 0.142857142857              1
       status_opinii          cena
1    mniej 50 opinii 0.46153846154
2      50-100 opinii 0.57692307692
3  więcej 100 opinii 0.53846153846
4      50-100 opinii 1.00000000000
5    mniej 50 opinii 0.38461538462
6  więcej 100 opinii 0.15384615385
7  więcej 100 opinii 0.69230769231
8  więcej 100 opinii 0.76923076923
9  więcej 100 opinii 0.42307692308
10 więcej 100 opinii 0.42307692308
11   mniej 50 opinii 0.07692307692
12     50-100 opinii 1.00000000000
13 więcej 100 opinii 0.61538461538
14 więcej 100 opinii 0.00000000000
15 więcej 100 opinii 0.26923076923
16 więcej 100 opinii 0.00000000000
17 więcej 100 opinii 0.23076923077
18     50-100 opinii 0.50000000000
19 więcej 100 opinii 0.26923076923
20 więcej 100 opinii 0.11538461538
> 
> net.price <- neuralnet(cena~pojemność+prędkość_wirowania+liczba_opini+oceny_klientów,
+                        pralki, hidden = c(5,3,3), threshold = 0.01)
> 
> plot(net.price)